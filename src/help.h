#define GIANT_HELP_STRING "{{\"subject\":[\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"list\",\"strings\",\"list\",\"list\",\"table\",\"table\",\"table\",\"table\",\"table\",\"table\",\"table\",\"table\",\"table\",\"aggregate\",\"aggregate\",\"aggregate\",\"aggregate\",\"aggregate\",\"aggregate\",\"aggregate\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"sql\",\"sql\",\"sql\",\"sql\",\"sql\",\"sql\",\"sql\",\"misc\",\"misc\",\"misc\",\"misc\",\"misc\",\"misc\",\"perf\",\"timestamp\",\"timestamp\",\"timestamp\",\"timestamp\",\"ipc\",\"ipc\",\"ipc\",\"ipc\",\"types\",\"types\",\"types\",\"types\",\"types\",\"types\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"io\",\"misc\",\"misc\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"math\",\"strings\",\"strings\",\"strings\",\"strings\",\"strings\",\"strings\",\"strings\",\"list\",\"list\",\"truthy\",\"truthy\",\"functions\",\"functions\",\"functions\",\"functions\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\",\"combinator\"],\"namev\":[\"ascend\",\"bucketed\",\"car\",\"cdr\",\"combinations\",\"count\",\"cross\",\"deal\",\"descend\",\"distinct\",\"drop\",\"enlist\",\"enumerate\",\"except\",\"explode\",\"filter\",\"first\",\"flatten\",\"implode\",\"in\",\"intersect\",\"join\",\"last\",\"order\",\"parse_int\",\"parse_float\",\"part\",\"permutations\",\"powerset\",\"range\",\"range\",\"range\",\"repeat\",\"reverse\",\"search\",\"shift\",\"shuffle\",\"sort\",\"split\",\"trim\",\"union\",\"which\",\"asof_join\",\"has_column\",\"has_key\",\"left_join\",\"map\",\"table\",\"xkeys\",\"xvals\",\"tables\",\"rsum\",\"count_non_null\",\"count_null\",\"xbar\",\"tokens\",\"tokens\",\"tokens\",\"between\",\"dotp\",\"lsq\",\"minv\",\"mmul\",\"rand\",\"rand\",\"rand\",\"transpose\",\"token\",\"token\",\"token\",\"token\",\"converge\",\"converge\",\"deconverge\",\"deconverge\",\"fold\",\"fold\",\"mapback\",\"mapback\",\"mapdown\",\"mapdown\",\"mapleft\",\"mapright\",\"unfold\",\"unfold\",\"insert\",\"values\",\"delete\",\"select\",\"from\",\"group\",\"update\",\"atom\",\"eval\",\"shell\",\"seed_prng\",\"sleep\",\"dlload\",\"timing\",\"stamp_diff\",\"now\",\"now_date\",\"now_time\",\"open_socket\",\"close_socket\",\"send_async\",\"send_sync\",\"\",\"\",\"ifnull\",\"kerf_type\",\"kerf_type_name\",\"rep\",\"load\",\"exit\",\"reset\",\"out\",\"mkdir\",\"display\",\"dir_ls\",\"lines\",\"open_table\",\"read_from_path\",\"read_striped_from_path\",\"read_table_from_csv\",\"read_table_from_delimited_file\",\"read_table_from_fixed_file\",\"read_table_from_tsv\",\"write_csv_from_table\",\"write_delimited_file_from_table\",\"write_striped_to_path\",\"write_text\",\"write_to_path\",\"append_table_from_csv\",\"append_table_from_fixed_file\",\"append_table_from_psv\",\"append_table_from_tsv\",\"create_table_from_csv\",\"create_table_from_fixed_file\",\"create_table_from_psv\",\"create_table_from_tsv\",\"help\",\"meta_table\",\"minus\",\"subtract\",\"times\",\"add\",\"log\",\"log\",\"ln\",\"divide\",\"std\",\"sum\",\"min\",\"max\",\"med\",\"exp\",\"exp\",\"pow\",\"abs\",\"sqrt\",\"lg\",\"var\",\"negate\",\"ceil\",\"floor\",\"erf\",\"erfc\",\"toupper\",\"tolower\",\"kerf_from_json\",\"json_from_kerf\",\"string\",\"ceil\",\"floor\",\"len\",\"take\",\"isnull\",\"ifnull\",\"function\",\"def\",\"lambda\",\"return\",\"refold\",\"refold\",\"reduce\",\"reduce\",\"mapcores\",\"mapcores\"],\"usage\":[\"ascend(x) <\",\"bucketed(x,y)\",\"car(x)\",\"cdr(x)\",\"combinations(x,n,repeats)\",\"count(x)\",\"cross(x,y)\",\"deal(x,y)\",\"descend(x) >\",\"distinct(x)\",\"drop(x,y)\",\"enlist(x)\",\"enumerate(x)\",\"except(x,y)\",\"explode(x,y)\",\"filter(f,x)\",\"first(x,y)\",\"flatten(x)\",\"implode(x,y)\",\"in(x,y)\",\"intersect(x,y)\",\"join(x,y)\",\"last(x,y)\",\"order(x)\",\"parse_int(x, radix)\",\"parse_float(x)\",\"part(x)\",\"permutations(x,repeats)\",\"powerset(x)\",\"range(x)\",\"range(x,y)\",\"range(x,y,z)\",\"repeat(x,y)\",\"reverse(x) \\/\",\"search(x,y)\",\"shift(x,y,z)\",\"shuffle(x)\",\"sort(x)\",\"split(x,y)\",\"trim(x)\",\"union(x)\",\"which(x) ?\",\"asof_join(x, y, k1, k2)\",\"has_column(x, name)\",\"has_key(x, key)\",\"left_join(x, y, keys)\",\"map(keys, values)\",\"table(columns, values)\",\"xkeys(x)\",\"xvals(x)\",\"tables()\",\"rsum(list)\",\"count_non_null(list)\",\"count_null(list)\",\"xbar(x,y)\",\"\",\"\",\"\",\"between(x,y)\",\"dotp(x,y)\",\"lsq(A,B)\",\"minv(A)\",\"mmul(A,B)\",\"rand()\",\"rand(x)\",\"rand(x,y) ?\",\"transpose(x) .\",\"\",\"\",\"\",\"\",\"u converge x\",\"x u converge y\",\"u deconverge x\",\"x u deconverge x\",\"b fold x\",\"x b fold y\",\"b mapback x\",\"x b mapback y\",\"u mapdown x\",\"x b mapdown y\",\"x b mapleft y\",\"x b mapright y\",\"b unfold x\",\"x b unfold y\",\"insert\",\"values\",\"delete\",\"select\",\"from\",\"group\",\"update\",\"atom(x)\",\"eval(x)\",\"shell(x)\",\"seed_prng(x)\",\"sleep(x)\",\"dlload(filename,funcname,argc)\",\"timing(x)\",\"stamp_diff(x,y)\",\"now()\",\"now_date()\",\"now_time()\",\"open_socket (host, port)\",\"close_socket(handle)\",\"send_async(handle, expr)\",\"send_sync(handle, expr)\",\"\",\"\",\"ifnull(x)\",\"kerf_type(x)\",\"kerf_type_name(x)\",\"rep(x)\",\"load(filename)\",\"exit(statusCode)\",\"reset(dropArgs)\",\"out(string)\",\"mkdir(x)\",\"display\",\"dir_ls(path, showFullPaths)\",\"lines(filename, limit)\",\"opentable(filename)\",\"read_from_path(filename)\",\"read_striped_from_path(dirname)\",\"read_table_from_csv (filename,fields,hrows)\",\"read_table_from_delimited_file (delim,filename,fields,hrows)\",\"read_table_from_fixed_file(filename,attr)\",\"read_table_from_tsv(filename,fields,hrows)\",\"write_csv_from_table(filename,table)\",\"write_delimited_file_from_table(delim,filename,table)\",\"write_striped_to_path(dirname,x)\",\"write_text(filename, x)\",\"write_to_path(filename, x)\",\"append_table_from_csv(tablepath,csvpath,fields,hrows)\",\"append_table_from_fixed_file (tablepath,fixedpath,attr)\",\"append_table_from_psv (tablepath,psvpath,fields,hrows)\",\"append_table_from_tsv (tablepath,tsvpath,fields,hrows)\",\"create_table_from_csv (tablepath,csvpath,fields,hrows)\",\"create_table_from_fixed_file (tablepath,fixedpath,attr)\",\"create_table_from_psv(tablepath,psvpath,fields,hrows)\",\"create_table_from_tsv (tablepath,tsvpath,fields,hrows)\",\"help(x)\",\"meta_table(x)\",\"minus(x,y)\",\"subtract(x,y)\",\"times(x,y), *\",\"add(x,y), +\",\"log(x)\",\"log(x,y)\",\"ln(x)\",\"divide(x,y), \\/\",\"std(x)\",\"sum(x)\",\"min(x)\",\"max(x)\",\"med(x)\",\"exp(x)\",\"exp(x,y)\",\"pow(x,y), **\",\"abs(x)\",\"sqrt(x)\",\"lg(x)\",\"var(x)\",\"negate(x)\",\"ceil(x)\",\"floor(x)\",\"erf(x)\",\"erfc(x)\",\"toupper(x)\",\"tolower(x)\",\"kerf_from_json(x)\",\"json_from_kerf(x)\",\"string(x)\",\"ceil(x)\",\"floor(x)\",\"len(x)\",\"take(x)\",\"isnull(x)\",\"ifnull(x)\",\"function name()\",\"def name()\",\"fun:{[x]...}\",\"return(x)\",\"b refold x\",\"x b refold y\",\"x b reduce y\",\"b reduce x\",\"b mapcores x\",\"x b mapcores y\"],\"description\":[\"Ascending indices \\/ grade up.\",\"Bucket y Values by x.\",\"First element of x.\",\"All except first element of x.\",\"N-long combinations.\",\"Number of elements in x.\",\"Cartesian product of lists.\",\"x unique random items of y.\",\"Descending indices \\/ grade dn.\",\"First instance of elements of x.\",\"Remove first x elements from y.\",\"Wrap x in a list.\",\"Range [0,x) \\/ map keys.\",\"Remove all y from x.\",\"Split y at instances of x.\",\"Items where f(x) is truthy.\",\"Take first x elements of y.\",\"Concatenate elements of x.\",\"Join elements of y with x.\",\"Is the item x in y?\",\"Collect items in x and y.\",\"Create a list from x and y.\",\"Last x elements of y.\",\"Equivalent to x.\",\"Parse string with optional base.\",\"Parse string.\",\"Map unique items to indices.\",\"Optional repeat elements.\",\"All subsets of x.\",\"Integer vector [0, x).\",\"Numeric vector [x, y), step 1.\",\"Numeric vector [x, y), step z.\",\"List of x copies of y.\",\"Reverse the order of items in x.\",\"Find index of x in y or null.\",\"Shift y by x, fill with z.\",\"Randomly permute x.\",\"Sort the items in x.\",\"Split x by indices in y.\",\"Remove leading\\/trailing spaces.\",\"Set union of x and y.\",\"Gather nonzero indices.\",\"Left join x and y on k1 as of k2.\",\"Does table have a given column?\",\"Check for valid index.\",\"Left join x and y on k.\",\"Build a map from two vectors.\",\"Build a table.\",\"Keys of map\\/table, indices of list.\",\"Values of map\\/table\\/list.\",\"List names of loaded tables.\",\"Running sum. + unfold list.\",\"How many items are not null?\",\"How many items are null?\",\"x * floor y\\/x.\",\"avg max median min std sum var\",\"tableHeaderColor Sliding Windows (width, list)\",\"mavg mcount mmax mmin msum\",\"Is x between y[0] and y[1]?\",\"Dot\\/Scalar product of x and y.\",\"Solve  for x.\",\"Inverse of matrix A.\",\"Multiply matrices A and B.\",\"1 random float [0, 1).\",\"1 random integer [0, x).\",\"x randoms of type y [0, y).\",\"Matrix transpose of x.\",\"+ - \\/ *  ** !    : = == < > <= >= != <> abs acos add\",\"asin atan ceil cos cosh divide erf erfc exp floor lg ln log\",\"mod negative pow sin sinh sqrt subtract tan tanh times and\",\"equal greater greatereq less lesseq match not noteq or\",\"Apply u to x until the value repeats or stops changing.\",\"Apply u to x, y times.\",\"Apply u to x, y times, gather intermediate results.\",\"Apply u to x until the value repeats or stops changing,  gather intermediate results.\",\"Apply b between elements of x.\",\"Apply b between elements of x.\",\"Apply b between elements of x and their predecessor.\",\"Apply b between elements of x and their predecessor.\",\"Apply u\\/b to each element of x (and each of y if present).\",\"Apply u\\/b to each element of x (and each of y if present).\",\"Apply b to y and each of x.\",\"Apply b to x and each of y.\",\"As fold, but gather intermediate results.\",\"As fold, but gather intermediate results.\",\"INSERT INTO table VALUES data\",\"INSERT INTO table VALUES data\",\"DELETE FROM table [ WHERE condition ]\",\"SELECT field1, field2 [ AS name ] ... FROM table  [ WHERE condition ] [ GROUP BY aggregate ]\",\"SELECT field1, field2 [ AS name ] ... FROM table  [ WHERE condition ] [ GROUP BY aggregate ]\",\"SELECT field1, field2 [ AS name ] ... FROM table  [ WHERE condition ] [ GROUP BY aggregate ]\",\"UPDATE table SET field1:val1, field2:val2 ...  [ WHERE condition ] [ GROUP BY aggregate ]\",\"Is x an atom?\",\"Evaluate the string x.\",\"Execute x as a shell command.\",\"Seed the RNG used by rand.\",\"Wait at least x milliseconds.\",\"Load a dynamic library.\",\"Enable or disable time logging.\",\"Stamp difference in ns.\",\"Current date-time.\",\"Current date.\",\"Current time.\",\"Host and port must be strings.\",\"Close an IPC socket handle.\",\"Doesn't block, Returns 1.\",\"Returns eval(y) on remote host.\",\"atlas char float hashed indexed int string\",\"json_from_kerf kerf_from_json type_null\",\"Is x null?\",\"Numeric typecode of x.\",\"Human-readable type name.\",\"String representation of x.\",\"Read and execute Kerf source.\",\"Exit, status code is optional.\",\"Reset workspace.\",\"Print a raw string x to stdout.\",\"Makes directory.\",\"display(x)\",\"List the files in a directory path.\",\"Read lines of a text file.\",\"mmap serialized Kerf table.\",\"Load a serialized Kerf object.\",\"Load a striped Kerf object.\",\"Load a CSV file into a table.\",\"Load a delimited file into a table.\",\"Load a fixed-width file. attr contains field types, widths, etc.\",\"Load a TSV file into a table with optional header rows.\",\"Write a table to a CSV file.\",\"Write a table to a delimited file.\",\"Write a striped Kerf object.\",\"Serialize x to a file as JSON.\",\"Serialize x to a file as binary.\",\"Append to disk-backed table.\",\"Append to disk-backed table.\",\"Append to disk-backed table.\",\"Append to disk-backed table.\",\"New disk-backed table.\",\"New disk-backed table.\",\"New disk-backed table.\",\"New disk-backed table.\",\"prints help table on subject string x.\",\"meta information on table x.\",\"subtracts y from x.\",\"subtracts y from x.\",\"multiply x by y.\",\"add x to y.\",\"log base 10 of x.\",\"log base x of y.\",\"natural logarithm of x.\",\"divide x by y.\",\"population standard deviation of x.\",\"sum of x.\",\"minimum of x.\",\"maximum of x.\",\"median of x.\",\"natural exponential function of x.\",\"raise x to power y.\",\"raise x to power y.\",\"absolute value of x.\",\"square root of x.\",\"base 2 logarithm of x.\",\"population variance of x.\",\"negative of x.\",\"smallest integer following x.\",\"largest integer preceding x.\",\"Gauss error function of x.\",\"1-erf(x).\",\"upper case of string x.\",\"lower case of string x.\",\"turns JSON string x into a kerf object.\",\"turns kerf object x into a JSON string.\",\"turns kerf numeric object x into string representation.\",\"upper case of string x.\",\"lower case of string x.\",\"length of list x.\",\"the first x elements of y.\",\"is x null.\",\"is x null.\",\"defines function name().\",\"defines function name().\",\"defines function of x bound to name fun.\",\"returns value x.\",\"As fold, but gather intermediate results.\",\"As fold, but gather intermediate results.\",\"apply b between elements of x.\",\"apply b between elements of x.\",\"same as mapdown, applied to multiple cores.\",\"same as mapdown, applied to multiple cores.\"]}}"






